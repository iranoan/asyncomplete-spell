*asyncomplete-spell* spell check for asyncomplete.vim

Author:  Iranoan <iranoan+vim@gspell.com>
Repository: https://github.com/iranoan/asyncomplete-spell
License: GPL Ver.3.


==============================================================================
                                                   *asyncomplete-spell-contents*
目次~

	* 概要                                        |asyncomplete-spell-introduction|
	* 要件                                        |asyncomplete-spell-require|
	* インストール                                |asyncomplete-spell-install|
	* 設定                                        |asyncomplete-spell-conf|


==============================================================================
                                               *asyncomplete-spell-introduction*
概要~

asyncomplate.vim の補完で正しいスペル補完候補に加える

==============================================================================
                                                    *asyncomplete-spell-require*
要件~

* Vim 8.0 以上
* asyncomplete.vim
	https://github.com/prabirshrestha/asyncomplete.vim

==============================================================================
                                                    *asyncomplete-spell-install*
インストール~

使用しているパッケージ・マネージャに従えば良い

Vundle (https://github.com/gmarik/vundle)~
>
	Plug 'iranoan/asyncomplete-spell'

Vim-Plug (https://github.com/junegunn/vim-plug)~
>
	Plug 'iranoan/asyncomplete-spell'

NeoBundle (https://github.com/Shougo/neobundle.vim)~
>
	NeoBundle 'iranoan/asyncomplete-spell'

dein.nvim (https://github.com/Shougo/dein.vim)~
>
	call dein#add('iranoan/asyncomplete-spell')

Vim packadd~
>
	$ git clone https://github.com/iranoan/asyncomplete-spell ~/.vim/pack/iranoan/start/asyncomplete-spell

<遅延読み込みをさせるなら >
	$ git clone https://github.com/iranoan/asyncomplete-spell ~/.vim/pack/iranoan/opt/asyncomplete-spell
<として asyncomplete.vim の設定箇所に >
	packadd asyncomplete-spell
<を書き加える


==============================================================================
                                                       *asyncomplete-spell-conf*
設定~
~/.vim/vimrc などの設定ファイル中の asyncomplete.vim 設定箇所に次のような記載を
加える >
	call asyncomplete#register_source(asyncomplete#sources#spell#get_source_options({
		\ 'priority': 5,
		\ }))

英語を想定しているので、それ以外の言語で使う場合は綴りに使う文字設定必要で、デ
フォルト相当は >
	call asyncomplete#register_source(asyncomplete#sources#spell#get_source_options({
		\ 'refresh_pattern': '\m\c\([A-Z]\{2,}\|[A-Z]\+''[A-Z]\+\)$',
		\ 'allowlist': ['*'],
		\ }))

==============================================================================
                                                       *asyncomplete-spell-use*
使用方法~

設定が終われば、asyncomplete.vim の補完候補に
	* 正しいスペルと [--] を表示する
		* -- 部には spellbadword() によるスペルミスの種類を表示する
	* スペルミスがなければ、補完候補に何も加えない

また
* 単語ごとに2文字以上で補完候補に加える
* asyncomplate.vim はは標準設定では前方一致で補完候補を絞り込むので、表示される
	補完候補は |z=|, |i_CTRL-X_CTRL-S| (|i_CTRL-X_s|) より少なくなる
* CamelCase の綴りは全体でスペル・チェックしてミスが有る場合は、末尾部分で大
	文字で区切った最長一致でチェックしている
	例えば LuaLaTeX では、次の順でチェックしていく
	- LuaLaTeX
	- LaTeX
	- TeX

z=, i_CTRL-X_CTRL-S (i_CTRL-X_s) 相当を表示させる方法~

|g:asyncomplete_preprocessor| を設定すれば良い

例えば重複を除きつつ、asyncomplete-spell 以外は大文字・小文字を区別しない前方一
致で絞り込ませるのは次の設定
>
	let g:asyncomplete_preprocessor = [function('s:asyncomplete_preprocessor')]

	function s:asyncomplete_preprocessor(options, matches) abort
		let l:visited = {}
		let l:items = []
		let l:base = '^\m' .. escape(a:options['base'], '\.$*~')
		for [l:source_name, l:matches] in items(a:matches)
			for l:item in l:matches['items']
				if !has_key(l:visited, l:item['word'])
							\ && ( l:source_name ==# 'spell' || l:item['word'] =~? l:base )
					call add(l:items, l:item)
					let l:visited[l:item['word']] = 1
				endif
			endfor
		endfor
		call asyncomplete#preprocess_complete(a:options, l:items)
	endfunction
<
vim:tw=78:ts=2:ft=help:norl:noet:fen:
